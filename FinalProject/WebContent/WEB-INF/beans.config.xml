<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


		<context:annotation-config/>
	
	<context:component-scan base-package="sampple"/>
 
  
    
	<mvc:annotation-driven/>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	


	<!-- 如果要使用annotation還要在底下的Namespaces選擇context以及右邊第一個打勾 -->
	
	<!--  
	<bean id="SQLserverDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
	    <property name="url" value="jdbc:sqlserver://localhost:1433;databaseName=LeonPower"/>
	    <property name="username" value="sa"/>
	    <property name="password" value="w41420"/>
	</bean>
	-->
	<bean id="SQLserverJndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName" value="java:comp/env/FinalSubject"></property>
	</bean> 
	
	<!--  
	<bean id="sessionFactory" destroy-method="destroy" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="SQLserverJndiDataSource"/>
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>	  
	此段已被下面取代，之後不需要hibernate.cfg.xml設定檔
	-->
	
	<bean id="sessionFactory" destroy-method="destroy" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="SQLserverJndiDataSource" />
		<property name="packagesToScan" value="sampple"></property>
		<property name="hibernateProperties">
		   <props>
		     <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
		     <prop key="hibernate.show_sql">true</prop>
		     <prop key="hibernate.format_sql">true</prop>
		     <prop key="hibernate.current_session_context_class">thread</prop>
		     <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
		   </props>
		</property>
	</bean>	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
  	  
	<!-- 使用Quartz來設定排程 -->
	<bean id="targetClass" class="sampple.util.AdMailUtils"/>
	<!--定時器具體作業 -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="targetClass"/>
    	<property name="targetMethod" value="executeMethod"/>
	</bean> 
	 
	<!--觸發點(方法一) -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
    	<property name="jobDetail" ref="jobDetail"/>
    	<!-- 設定例行執行時間  1分鐘執行一次   -->
    	<property name="repeatInterval"><value>60000</value></property>
    	
    	<property name="startDelay"><value>0</value></property>
    	<!-- 重複次數：0  去掉的話按結束時間算-->
        <property name="repeatCount">
            <value>0</value>
        </property>
    	
	</bean>
	
	
   <!--觸發點(方法二)按週期執行的任務
    <bean id="cronTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobDetail" />
        </property>
        cron表示式，此處是每天10點42執行
        <property name="cronExpression">
            <value>0 42 10 * * ?</value>
        </property>
        
    </bean>
 	-->
 	
	<!-- 排程器工廠-->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
        	<list>
            	<ref bean="cronTrigger"/>
        	</list>
    	</property>
	</bean>
  

</beans>
